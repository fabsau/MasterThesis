"""Initial schema

Revision ID: a6566bab7e7c
Revises: 
Create Date: 2025-05-28 16:00:03.496301

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a6566bab7e7c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('model_runs',
    sa.Column('model_run_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('featureset', sa.Text(), nullable=True),
    sa.Column('trained_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
    sa.Column('metrics', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('model_run_id')
    )
    op.create_table('tenants',
    sa.Column('tenant_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('region', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
    sa.PrimaryKeyConstraint('tenant_id')
    )
    op.create_table('endpoints',
    sa.Column('endpoint_id', sa.BigInteger(), nullable=False),
    sa.Column('tenant_id', sa.BigInteger(), nullable=False),
    sa.Column('agent_uuid', sa.Text(), nullable=False),
    sa.Column('computer_name', sa.Text(), nullable=True),
    sa.Column('os_name', sa.Text(), nullable=True),
    sa.Column('os_type', sa.Text(), nullable=True),
    sa.Column('os_revision', sa.Text(), nullable=True),
    sa.Column('ip_v4', sa.Text(), nullable=True),
    sa.Column('ip_v6', sa.Text(), nullable=True),
    sa.Column('group_id', sa.BigInteger(), nullable=True),
    sa.Column('site_id', sa.BigInteger(), nullable=True),
    sa.Column('agent_version', sa.Text(), nullable=True),
    sa.Column('scan_started_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('scan_finished_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.tenant_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('endpoint_id')
    )
    op.create_index('ix_endpoints_tenant', 'endpoints', ['tenant_id'], unique=False)
    op.create_index('ix_endpoints_uuid', 'endpoints', ['agent_uuid'], unique=False)
    op.create_table('threats',
    sa.Column('threat_id', sa.BigInteger(), nullable=False),
    sa.Column('tenant_id', sa.BigInteger(), nullable=False),
    sa.Column('endpoint_id', sa.BigInteger(), nullable=False),
    sa.Column('sha256', sa.Text(), nullable=False),
    sa.Column('sha1', sa.Text(), nullable=True),
    sa.Column('md5', sa.Text(), nullable=True),
    sa.Column('file_path', sa.Text(), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('threat_name', sa.Text(), nullable=True),
    sa.Column('publisher_name', sa.Text(), nullable=True),
    sa.Column('certificate_id', sa.Text(), nullable=True),
    sa.Column('detection_type', sa.Enum('static', 'dynamic', 'heuristic', 'red_team', 'other', name='detection_type_t'), nullable=True),
    sa.Column('confidence_level', sa.Enum('low', 'suspicious', 'medium', 'high', 'critical', name='confidence_level_t'), nullable=True),
    sa.Column('incident_status', sa.Enum('new', 'investigating', 'resolved', 'mitigated', 'other', name='incident_status_t'), nullable=True),
    sa.Column('analyst_verdict', sa.Enum('false_positive', 'true_positive', 'unknown', name='analyst_verdict_t'), server_default='unknown', nullable=False),
    sa.Column('classification_src', sa.Text(), nullable=True),
    sa.Column('initiated_by', sa.Text(), nullable=True),
    sa.Column('identified_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('ingested_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
    sa.Column('last_updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('raw_payload', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['endpoint_id'], ['endpoints.endpoint_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.tenant_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('threat_id')
    )
    op.create_index('ix_threats_confidence', 'threats', ['confidence_level'], unique=False)
    op.create_index('ix_threats_publisher', 'threats', ['publisher_name'], unique=False)
    op.create_index('ix_threats_sha256', 'threats', ['sha256'], unique=False)
    op.create_index('ix_threats_status', 'threats', ['incident_status'], unique=False)
    op.create_index('ix_threats_tenant_ingest', 'threats', ['tenant_id', 'ingested_at'], unique=False)
    op.create_index('ix_threats_verdict', 'threats', ['analyst_verdict'], unique=False)
    op.create_table('threat_events',
    sa.Column('event_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('threat_id', sa.BigInteger(), nullable=False),
    sa.Column('endpoint_id', sa.BigInteger(), nullable=False),
    sa.Column('event_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('event_type', sa.Text(), nullable=False),
    sa.Column('event_category', sa.Text(), nullable=False),
    sa.Column('severity', sa.Integer(), nullable=True),
    sa.Column('proc_netconn_count', sa.Integer(), nullable=True),
    sa.Column('proc_module_count', sa.Integer(), nullable=True),
    sa.Column('proc_registry_change', sa.Integer(), nullable=True),
    sa.Column('proc_file_create_count', sa.Integer(), nullable=True),
    sa.Column('proc_file_delete_count', sa.Integer(), nullable=True),
    sa.Column('proc_file_mod_count', sa.Integer(), nullable=True),
    sa.Column('proc_child_count', sa.Integer(), nullable=True),
    sa.Column('proc_evasion_count', sa.Integer(), nullable=True),
    sa.Column('proc_general_count', sa.Integer(), nullable=True),
    sa.Column('event_payload', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
    sa.ForeignKeyConstraint(['endpoint_id'], ['endpoints.endpoint_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['threat_id'], ['threats.threat_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('event_id')
    )
    op.create_index('ix_events_category', 'threat_events', ['event_category'], unique=False)
    op.create_index('ix_events_endpoint_time', 'threat_events', ['endpoint_id', 'event_time'], unique=False)
    op.create_index('ix_events_threat_time', 'threat_events', ['threat_id', 'event_time'], unique=False)
    op.create_index('ix_events_type', 'threat_events', ['event_type'], unique=False)
    op.create_table('threat_indicators',
    sa.Column('indicator_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('threat_id', sa.BigInteger(), nullable=False),
    sa.Column('category', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('tactic_name', sa.Text(), nullable=True),
    sa.Column('technique_name', sa.Text(), nullable=True),
    sa.Column('technique_id', sa.Text(), nullable=True),
    sa.Column('technique_link', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['threat_id'], ['threats.threat_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('indicator_id')
    )
    op.create_index('ix_inds_threat', 'threat_indicators', ['threat_id'], unique=False)
    op.create_table('threat_labels',
    sa.Column('label_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('threat_id', sa.BigInteger(), nullable=False),
    sa.Column('label', sa.Enum('false_positive', 'true_positive', 'unknown', name='analyst_verdict_t'), nullable=False),
    sa.Column('source', sa.Text(), nullable=False),
    sa.Column('labeled_by', sa.Text(), nullable=True),
    sa.Column('labeled_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['threat_id'], ['threats.threat_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('label_id')
    )
    op.create_index('ix_labels_label', 'threat_labels', ['label'], unique=False)
    op.create_index('ix_labels_threat', 'threat_labels', ['threat_id'], unique=False)
    op.create_table('threat_mitigations',
    sa.Column('mitigation_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('threat_id', sa.BigInteger(), nullable=False),
    sa.Column('action', sa.Text(), nullable=False),
    sa.Column('status', sa.Text(), nullable=True),
    sa.Column('report_id', sa.BigInteger(), nullable=True),
    sa.Column('started_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('ended_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
    sa.ForeignKeyConstraint(['threat_id'], ['threats.threat_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('mitigation_id')
    )
    op.create_index('ix_mitigations_threat', 'threat_mitigations', ['threat_id'], unique=False)
    op.create_table('threat_notes',
    sa.Column('note_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('threat_id', sa.BigInteger(), nullable=False),
    sa.Column('note', sa.Text(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
    sa.ForeignKeyConstraint(['threat_id'], ['threats.threat_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('note_id')
    )
    op.create_index('ix_notes_threat', 'threat_notes', ['threat_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_notes_threat', table_name='threat_notes')
    op.drop_table('threat_notes')
    op.drop_index('ix_mitigations_threat', table_name='threat_mitigations')
    op.drop_table('threat_mitigations')
    op.drop_index('ix_labels_threat', table_name='threat_labels')
    op.drop_index('ix_labels_label', table_name='threat_labels')
    op.drop_table('threat_labels')
    op.drop_index('ix_inds_threat', table_name='threat_indicators')
    op.drop_table('threat_indicators')
    op.drop_index('ix_events_type', table_name='threat_events')
    op.drop_index('ix_events_threat_time', table_name='threat_events')
    op.drop_index('ix_events_endpoint_time', table_name='threat_events')
    op.drop_index('ix_events_category', table_name='threat_events')
    op.drop_table('threat_events')
    op.drop_index('ix_threats_verdict', table_name='threats')
    op.drop_index('ix_threats_tenant_ingest', table_name='threats')
    op.drop_index('ix_threats_status', table_name='threats')
    op.drop_index('ix_threats_sha256', table_name='threats')
    op.drop_index('ix_threats_publisher', table_name='threats')
    op.drop_index('ix_threats_confidence', table_name='threats')
    op.drop_table('threats')
    op.drop_index('ix_endpoints_uuid', table_name='endpoints')
    op.drop_index('ix_endpoints_tenant', table_name='endpoints')
    op.drop_table('endpoints')
    op.drop_table('tenants')
    op.drop_table('model_runs')
    # ### end Alembic commands ###
